name: Deploy to hetzner # name of this workflow
run-name: ${{ github.actor }} is deploying to hetzner # name of this specific workflow run, can include infos like who started it

# specify when this workflow runs
# use event with filters --> https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#using-filters
# only run the job if push on certain branch
on:
  push:
      branches:
      - master

# Specify what runs (jobs) https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobs
jobs:
  build_and_deploy_to_hetzner: # the job id
    name: build and deploy to hetzner # the job name (displayed in ui)
    runs-on: ubuntu-latest # Good to know, common tools like docker and npm are preinstalled in ubuntu-latest https://github.com/actions/runner-images#software-and-image-support
    
    # define steps to execute https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsteps
    steps:
    - 
      name: checkout newly pushed commit
      uses: actions/checkout@v4 # checkout my repo "By default, this action will check-out to the SHA for that workflowâ€™s event (such as push and pull_request)." https://stackoverflow.com/a/76938699/15015069
    -
      name: generate static html files from sveltekit
      run: |
        cd sveltekit-frontend
        cd diary-frontend
        npm install
        npm run buld-linux
        cd ..
        cd ..
    -
      name: build docker image
      run:  docker build --platform linux/arm64 -t ${{ vars.IMAGE_NAME }}:${{ github.sha }} -f csharp-diary-rewrite/Dockerfile csharp-diary-rewrite
    - 
      name: save image as tar # save image as tar so that i can scp it over to vps https://stackoverflow.com/q/23935141/15015069
      run:  docker save ${{ vars.IMAGE_NAME }}:${{ github.sha }} > ${{ vars.IMAGE_TAR_NAME }}
    - 
      name: Prepare docker-compose file (replace placeholders)
      # uses sed to replace the placeholders in the docker-compose.yml file with the actual image name and tag
      # s# --> s = start of sed command, # = delimiter (can be any char, but # is common), g = global (replace all occurences)
      # sed is structured like this: s (start) # (some delimiter) <search pattern> (what to search for) # <replace pattern> (what to replace it with) # g (global, replace all occurences
      run: |
        sed -i "s#<insertImageName>#${{ vars.IMAGE_NAME }}#g" ./docker-compose.yml
        sed -i "s#<insertImageTag>#${{ github.sha }}#g" ./docker-compose.yml

    - 
      name: prepare .env file (replace placeholders)
      run: sed -i "s#<insertDbPassword>#${{ secrets.POSTGRES_DB_PW }}#g" ./.env

    - 
      name: copy image, docker-compose.yml and .env to vps
      uses: appleboy/scp-action@v0.1.7 # https://github.com/appleboy/scp-action#usage
      with:
        host: ${{ secrets.HETZNER_VPS_IP }}
        username: ${{ secrets.HETZNER_VPS_SSH_USER }}
        key: ${{ secrets.HETZNER_VPS_SSH_PRIVATE_KEY }}
        source: ${{ vars.IMAGE_TAR_NAME }}, docker-compose.yml, .env
        target: ${{ vars.IMAGE_DIRECTORY_PATH }}

    - 
      name: Load and run Docker image on server 
      uses: appleboy/ssh-action@v1.0.2 # https://github.com/appleboy/ssh-action#using-private-key
      with:
        host: ${{ secrets.HETZNER_VPS_IP }}
        username: ${{ secrets.HETZNER_VPS_SSH_USER }}
        key: ${{ secrets.HETZNER_VPS_SSH_PRIVATE_KEY }}
        script: | # pipe char means text below is a text block and new lines also belong to it. https://stackoverflow.com/a/61661091/15015069
            cd ${{ vars.IMAGE_DIRECTORY_PATH }}
            docker load < ${{ vars.IMAGE_TAR_NAME }}
            sha256sum image.tar
            docker stop ${{ vars.IMAGE_NAME }} || true
            docker rm ${{ vars.IMAGE_NAME }} || true
            docker compose up -d
            rm ${{ vars.IMAGE_TAR_NAME }}

